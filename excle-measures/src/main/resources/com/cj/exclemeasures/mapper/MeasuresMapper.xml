<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.exclemeasures.mapper.MeasuresMapper" >
  <resultMap id="BaseResultMap" type="com.cj.common.entity.Measures" >
    <id column="measures_id" property="measuresId" jdbcType="BIGINT" />
    <result column="station_id" property="stationId" jdbcType="BIGINT" />
    <result column="year" property="year" jdbcType="DATE" />
    <result column="existing_measures" property="existingMeasures" jdbcType="VARCHAR" />
    <result column="proposed_rectification" property="proposedRectification" jdbcType="VARCHAR" />
    <result column="planned_time" property="plannedTime" jdbcType="DATE" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="person_liable" property="personLiable" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="founder_id" property="founderId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="factory_name" property="factoryName" jdbcType="VARCHAR" />
    <result column="task_area_name" property="taskAreaName" jdbcType="VARCHAR" />
    <result column="station_name" property="stationName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    measures_id, station_id, year, existing_measures, proposed_rectification, planned_time, 
    department, person_liable, state, founder_id, create_time, operator_id, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from measures
    where measures_id = #{measuresId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from measures
    where measures_id = #{measuresId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cj.common.entity.Measures" >
    insert into measures (measures_id, station_id, year, 
      existing_measures, proposed_rectification, 
      planned_time, department, person_liable, 
      state, founder_id, create_time, 
      operator_id, update_time)
    values (#{measuresId,jdbcType=BIGINT}, #{stationId,jdbcType=BIGINT}, #{year,jdbcType=DATE}, 
      #{existingMeasures,jdbcType=VARCHAR}, #{proposedRectification,jdbcType=VARCHAR}, 
      #{plannedTime,jdbcType=DATE}, #{department,jdbcType=VARCHAR}, #{personLiable,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{founderId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operatorId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cj.common.entity.Measures" >
    insert into measures
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="measuresId != null" >
        measures_id,
      </if>
      <if test="stationId != null" >
        station_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="existingMeasures != null" >
        existing_measures,
      </if>
      <if test="proposedRectification != null" >
        proposed_rectification,
      </if>
      <if test="plannedTime != null" >
        planned_time,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="personLiable != null" >
        person_liable,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="founderId != null" >
        founder_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="measuresId != null" >
        #{measuresId,jdbcType=BIGINT},
      </if>
      <if test="stationId != null" >
        #{stationId,jdbcType=BIGINT},
      </if>
      <if test="year != null" >
        #{year,jdbcType=DATE},
      </if>
      <if test="existingMeasures != null" >
        #{existingMeasures,jdbcType=VARCHAR},
      </if>
      <if test="proposedRectification != null" >
        #{proposedRectification,jdbcType=VARCHAR},
      </if>
      <if test="plannedTime != null" >
        #{plannedTime,jdbcType=DATE},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="personLiable != null" >
        #{personLiable,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="founderId != null" >
        #{founderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cj.common.entity.Measures" >
    update measures
    <set >
      <if test="stationId != null" >
        station_id = #{stationId,jdbcType=BIGINT},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=DATE},
      </if>
      <if test="existingMeasures != null" >
        existing_measures = #{existingMeasures,jdbcType=VARCHAR},
      </if>
      <if test="proposedRectification != null" >
        proposed_rectification = #{proposedRectification,jdbcType=VARCHAR},
      </if>
      <if test="plannedTime != null" >
        planned_time = #{plannedTime,jdbcType=DATE},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="personLiable != null" >
        person_liable = #{personLiable,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="founderId != null" >
        founder_id = #{founderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where measures_id = #{measuresId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cj.common.entity.Measures" >
    update measures
    set station_id = #{stationId,jdbcType=BIGINT},
      year = #{year,jdbcType=DATE},
      existing_measures = #{existingMeasures,jdbcType=VARCHAR},
      proposed_rectification = #{proposedRectification,jdbcType=VARCHAR},
      planned_time = #{plannedTime,jdbcType=DATE},
      department = #{department,jdbcType=VARCHAR},
      person_liable = #{personLiable,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      founder_id = #{founderId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where measures_id = #{measuresId,jdbcType=BIGINT}
  </update>



  <!--查询场站本年度风向防控信息-->
  <select id="findMeasuresByThisYear" parameterType="com.cj.core.domain.Pager"
          resultMap="com.cj.exclemeasures.mapper.MeasuresMapper.BaseResultMap,com.cj.common.mapper.PublicMapper.PagerTotal">
    SELECT
    SQL_CALC_FOUND_ROWS
    fbm.factory_name,ta.task_area_name,s.station_name,
        measures_id, m.station_id, `year`, existing_measures, proposed_rectification, planned_time,
    department, person_liable, state, founder_id, create_time, operator_id, update_time
    FROM
    measures m
    LEFT JOIN station s ON s.station_id = m.station_id
    LEFT JOIN task_area ta ON ta.task_area_id = s.task_area_id
    LEFT JOIN factory_basic_msg fbm ON fbm.factory_id = ta.factory_id
    WHERE
    m.station_id = #{parameters.stationId}
    AND
    DATE_FORMAT(m.`year`,'%Y')=#{parameters.year}
    AND
    m.state = '1'
    LIMIT #{minRow},#{pageSize};

    SELECT FOUND_ROWS() AS total;
  </select>

  <!--批量新增本年度环境风险防控信息-->
  <insert id="addMeasuresByThisYear" parameterType="java.util.List">
    insert into
    measures
    (
    station_id,
    year,
    existing_measures,
    proposed_rectification,
    planned_time,
    department,
    person_liable,
    founder_id,
    create_time
    )
    <foreach collection="list" item="item" index="index" separator="," open="values">
      (
      #{item.stationId},
      #{item.year},
      #{item.existingMeasures},
      #{item.proposedRectification},
      #{item.plannedTime},
      #{item.department},
      #{item.personLiable},
      #{item.founderId},
      #{item.createTime}
      )
    </foreach>
  </insert>


  <!--根据主键编辑 场站 本年度 数据-->
  <update id="updateMeasuresByThisYear" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";">
      update measures
      <set >

        <if test="item.existingMeasures != null" >
          existing_measures = #{item.existingMeasures,jdbcType=VARCHAR},
        </if>
        <if test="item.proposedRectification != null" >
          proposed_rectification = #{item.proposedRectification,jdbcType=VARCHAR},
        </if>
        <if test="item.plannedTime != null" >
          planned_time = #{item.plannedTime,jdbcType=DATE},
        </if>
        <if test="item.department != null" >
          department = #{item.department,jdbcType=VARCHAR},
        </if>
        <if test="item.personLiable != null" >
          person_liable = #{item.personLiable,jdbcType=VARCHAR},
        </if>
        <if test="item.state != null" >
          state = #{item.state,jdbcType=CHAR},
        </if>

        <if test="item.operatorId != null" >
          operator_id = #{item.operatorId,jdbcType=BIGINT},
        </if>
      </set>
      where
      measures_id = #{item.measuresId,jdbcType=BIGINT}


    </foreach>
  </update>
</mapper>